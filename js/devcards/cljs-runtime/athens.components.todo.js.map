{"version":3,"sources":["athens/components/todo.cljs"],"mappings":";;;;;AAOA,AAAA,AAAMA,AACHC,AAAIC,AAASC;AADhB,AAEE,AAAMC,AAAsB,AAAA,AAAe,AAAA,AAAA,AAACC,AAAyBJ;AAArE,AACE,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAqCL,AACA,AAACO,AACCJ,AACAF,AACAC,AACF,AAACM;AALtC,AAAA,AAAAH,AAAAA,AAACC,AAAAA,AAAAA;;AAQL,AAAA,AAAA,AAAA,AAAA,AAAKG,AAEM,AAAKC,AAAQV;AAAb,AACE,AAAAW,AAAC,AAAA,AAACC;AAAF,AAAA,AAAAD,AAAAA,AAAAA,AAAkBD,AAAAA,AAAQV,AAAAA;;AAD5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAGsB,AAAA,AAAA,AAACD,AAAcC;;;AAGhD,AAAA,AAAA,AAAA,AAAA,AAAKa,AAEM,AAAKH,AAAQV;AAAb,AACE,AAAAc,AAAC,AAAA,AAACF;AAAF,AAAA,AAAAE,AAAAA,AAAAA,AAAkBJ,AAAAA,AAAQV,AAAAA;;AAD5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAIsB,AAAA,AAAA,AAACD,AAAcC;;;AAGhD,AAAA,AAAKe,AAAYN,AAAeI","names":["athens.components.todo/todo-on-click","uid","from-str","to-str","current-block-content","athens.db/get-block","G__56190","re-frame.core/dispatch","clojure.string/replace","athens.util/now-ts","athens.components.todo/component-todo","content","fexpr__56191","cljs.core/constantly","athens.components.todo/component-done","fexpr__56192","athens.components.todo/components"],"sourcesContent":["(ns athens.components.todo\n  (:require\n    [athens.db :as db]\n    [athens.util :refer [now-ts]]\n    [re-frame.core :refer [dispatch]]))\n\n\n(defn todo-on-click\n  [uid from-str to-str]\n  (let [current-block-content (:block/string (db/get-block [:block/uid uid]))]\n    (dispatch [:transact [{:block/uid    uid\n                           :block/string (clojure.string/replace\n                                           current-block-content\n                                           from-str\n                                           to-str)\n                           :edit/time    (now-ts)}]])))\n\n\n(def component-todo\n  {:match #\"\\[\\[TODO\\]\\]\"\n   :render (fn [content uid]\n             ((constantly nil) content uid)\n             [:input {:type     \"checkbox\"\n                      :on-click #(todo-on-click uid #\"\\{\\{\\[\\[TODO\\]\\]\\}\\}\" \"{{[[DONE]]}}\")}])})\n\n\n(def component-done\n  {:match #\"\\[\\[DONE\\]\\]\"\n   :render (fn [content uid]\n             ((constantly nil) content uid)\n             [:input {:type     \"checkbox\"\n                      :checked  \"true\"\n                      :on-click #(todo-on-click uid #\"\\{\\{\\[\\[DONE\\]\\]\\}\\}\" \"{{[[TODO]]}}\")}])})\n\n\n(def components [component-todo component-done])\n"]}