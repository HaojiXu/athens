{"version":3,"sources":["athens/views/node_page.cljs"],"mappings":"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","names":["athens.views.node-page/page-style","athens.views.node-page/title-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","garden.selectors/+","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","athens.views.node-page/references-list-style","athens.views.node-page/references-group-title-style","athens.views.node-page/references-group-style","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/reference-breadcrumbs-style","athens.views.node-page/references-group-block-style","athens.views.node-page/page-menu-toggle-style","athens.views.node-page/handler","val","uid","G__58562","re-frame.core/dispatch","athens.views.node-page/db-handler","goog.functions/debounce","cljs.core/deref","athens.views.node-page/get-ref-ids","pattern","G__58563","G__58564","G__58565","posh.reagent/q","athens.db/dsdb","athens.views.node-page/merge-parents-and-block","ref-ids","parents","cljs.core/reduce-kv","m","_","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","athens.db/get-parents-recursively","blocks","cljs.core.map.cljs$core$IFn$_invoke$arity$2","id","athens.db/get-block-document","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","block","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/group-by-parent","cljs.core/group-by","x","cljs.core/first","athens.views.node-page/get-data","cljs.core/seq","athens.views.node-page/is-timeline-page","cljs.core/boolean","e58566","vec__58567","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","d","y","clojure.string.split.cljs$core$IFn$_invoke$arity$2","tick.alpha.api.date.cljs$core$IFn$_invoke$arity$1","clojure.string.join.cljs$core$IFn$_invoke$arity$2","js/Object","athens.views.node-page/node-page-el","state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","editing-uid","ref-groups","timeline-page?","map__58570","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","map__58571","children","title","is-shortcut?","show","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","komponentit.autosize/textarea","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","e","G__58574","G__58575","athens.views.buttons/button","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","rect","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/merge","js/module$node_modules$$material_ui$icons$index.ExpandMore","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","athens.views.dropdown/dropdown-style","athens.views.dropdown/menu-style","G__58576","js/module$node_modules$$material_ui$icons$index.BookmarkBorder","G__58577","js/module$node_modules$$material_ui$icons$index.Bookmark","athens.views.dropdown/menu-separator-style","js/module$node_modules$$material_ui$icons$index.Delete","athens.parse-renderer/parse-and-render","iter__4582__auto__","s__58579","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__58581","cljs.core/chunk-buffer","i__58580","map__58582","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58578","cljs.core/chunk-rest","map__58584","cljs.core/cons","cljs.core/rest","child","athens.views.blocks/block-el","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","s__58587","b__58589","i__58588","vec__58590","iter__58586","vec__58651","linked-or-unlinked","refs","cljs.core/not-empty","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","js/module$node_modules$$material_ui$icons$index.FilterList","s__58594","b__58596","i__58595","vec__58597","iter__58593","vec__58624","s__58655","b__58657","i__58656","vec__58658","iter__58654","vec__58685","group-title","group","athens.router.navigate_uid.cljs$core$IFn$_invoke$arity$1","s__58601","b__58603","i__58602","map__58604","iter__58600","map__58614","s__58628","b__58630","i__58629","map__58631","iter__58627","map__58641","s__58662","b__58664","i__58663","map__58665","iter__58661","map__58675","s__58689","b__58691","i__58690","map__58692","iter__58688","map__58702","athens.views.breadcrumbs/breadcrumbs-list","js/module$node_modules$$material_ui$icons$index.LocationOn","s__58607","b__58609","i__58608","map__58610","iter__58606","map__58612","s__58617","b__58619","i__58618","map__58620","iter__58616","map__58622","s__58634","b__58636","i__58635","map__58637","iter__58633","map__58639","s__58644","b__58646","i__58645","map__58647","iter__58643","map__58649","s__58668","b__58670","i__58669","map__58671","iter__58667","map__58673","s__58678","b__58680","i__58679","map__58681","iter__58677","map__58683","s__58695","b__58697","i__58696","map__58698","iter__58694","map__58700","s__58705","b__58707","i__58706","map__58708","iter__58704","map__58710","string","athens.views.breadcrumbs/breadcrumb","or__4185__auto__","athens.views.node-page/node-page-component","ident","map__58712","node","athens.db/get-node-document","G__58714","re-frame.core/subscribe","clojure.string/blank?","athens.patterns/linked","athens.patterns/unlinked","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.node-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :as parse-renderer]\n    [athens.patterns :as patterns]\n    [athens.router :refer [navigate-uid]]\n    [athens.style :refer [color]]\n    [athens.views.blocks :refer [block-el]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    [athens.views.buttons :refer [button]]\n    [athens.views.dropdown :refer [dropdown-style menu-style menu-separator-style]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :as string]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [posh.reagent :refer [#_pull q]]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]\n    [tick.alpha.api :as t]))\n\n\n;;; Styles\n\n\n(def page-style\n  {:margin \"2rem auto\"\n   :padding \"1rem 2rem\"\n   :flex-basis \"100%\"\n   :max-width \"55rem\"})\n\n\n(def title-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :flex-grow \"1\"\n   :margin \"0.2em 0 0.2em 1rem\"\n   :letter-spacing \"-0.03em\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :font-weight \"inherit\"\n                                 :padding \"0\"\n                                 :letter-spacing \"inherit\"\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :background \"transparent\"\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"0.25rem\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n(def references-style {:margin-block \"3em\"})\n\n\n(def references-heading-style\n  {:font-weight \"normal\"\n   :display \"flex\"\n   :padding \"0 2rem\"\n   :align-items \"center\"\n   ::stylefy/manual [[:svg {:margin-right \"0.25em\"\n                            :font-size \"1rem\"}]\n                     [:span {:flex \"1 1 100%\"}]]})\n\n\n(def references-list-style\n  {:font-size \"14px\"})\n\n\n(def references-group-title-style\n  {:color (color :link-color)\n   :margin \"0 1.5rem\"\n   :font-weight \"500\"\n   ::stylefy/manual [[:a:hover {:cursor \"pointer\"\n                                :text-decoration \"underline\"}]]})\n\n\n(def references-group-style\n  {:background (color :background-minus-2 :opacity-med)\n   :padding \"1rem 0.5rem\"\n   :border-radius \"0.25rem\"\n   :margin \"0.5em 0\"})\n\n\n(def reference-breadcrumbs-style\n  {:font-size \"12px\"\n   :padding \"0.25rem calc(2rem - 0.5em)\"})\n\n\n(def references-group-block-style\n  {:border-top [[\"1px solid \" (color :border-color)]]\n   :padding-block-start \"1em\"\n   :margin-block-start \"1em\"\n   ::stylefy/manual [[:&:first-of-type {:border-top \"0\"\n                                        :margin-block-start \"0\"}]]})\n\n\n(def page-menu-toggle-style\n  {:position \"absolute\"\n   :left \"-0.5rem\"\n   :border-radius \"1000px\"\n   :padding \"0.375rem 0.5rem\"\n   :color (color :body-text-color :opacity-high)\n   :top \"50%\"\n   :transform \"translate(-100%, -50%)\"})\n\n\n;;; Helpers\n\n\n(defn handler\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :node/title val]]]))\n\n\n(def db-handler (debounce handler 500))\n\n\n(defn get-ref-ids\n  [pattern]\n  @(q '[:find [?e ...]\n        :in $ ?regex\n        :where\n        [?e :block/string ?s]\n        [(re-find ?regex ?s)]]\n      db/dsdb\n      pattern))\n\n\n(defn merge-parents-and-block\n  [ref-ids]\n  (let [parents (reduce-kv (fn [m _ v] (assoc m v (db/get-parents-recursively v)))\n                           {}\n                           ref-ids)\n        blocks (map (fn [id] (db/get-block-document id)) ref-ids)]\n    (mapv\n      (fn [block]\n        (merge block {:block/parents (get parents (:db/id block))}))\n      blocks)))\n\n\n(defn group-by-parent\n  [blocks]\n  (group-by (fn [x]\n              (-> x\n                  :block/parents\n                  first\n                  :node/title))\n            blocks))\n\n\n(defn get-data\n  [pattern]\n  (-> pattern get-ref-ids merge-parents-and-block group-by-parent seq))\n\n\n(defn is-timeline-page\n  [uid]\n  (boolean\n    (try\n      (let [[m d y] (string/split uid \"-\")]\n        (t/date (string/join \"-\" [y m d])))\n      (catch js/Object _ false))))\n\n\n;;; Components\n\n\n;; TODO: where to put page-level link filters?\n(defn node-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:menu/show false\n                       :menu/x nil\n                       :menu/y nil})]\n    (fn [block editing-uid ref-groups timeline-page?]\n      (let [{:block/keys [children uid] title :node/title is-shortcut? :page/sidebar} block\n            {:menu/keys [show x y]} @state]\n\n        [:div (use-style page-style {:class [\"node-page\"]})\n         ;; TODO: implement timeline\n         ;;(when timeline-page?\n         ;;  [button {:on-click #(dispatch [:jump-to-timeline uid])}\n         ;;              [:<>\n         ;;               [:mui-icons Left]\n         ;;               [:span \"Timeline\"]]}])\n\n         ;; Header\n         [:h1 (use-style title-style {:data-uid uid :class \"page-header\"})\n          (when-not timeline-page?\n            [autosize/textarea\n             {:default-value title\n              :class         (when (= editing-uid uid) \"is-editing\")\n              :auto-focus    true\n              :on-change     (fn [e] (db-handler (.. e -target -value) uid))}])\n          [button {:class    [(when show \"active\")]\n                   :on-click (fn [e]\n                               (if show\n                                 (swap! state assoc :menu/show false)\n                                 (let [rect (.. e -target getBoundingClientRect)]\n                                   (swap! state merge {:menu/show true\n                                                       :menu/x    (.. rect -left)\n                                                       :menu/y    (.. rect -bottom)}))))\n                   :style    page-menu-toggle-style}\n           [:> mui-icons/ExpandMore]]\n\n          (when show\n            [:div (merge (use-style dropdown-style)\n                         {:style {:font-size \"14px\"\n                                  :position \"fixed\"\n                                  :left (str x \"px\")\n                                  :top (str y \"px\")}})\n             [:div (use-style menu-style)\n              (if is-shortcut?\n                [button {:on-click #(dispatch [:page/remove-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/BookmarkBorder]\n                  [:span \"Remove Shortcut\"]]]\n                [button {:on-click #(dispatch [:page/add-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/Bookmark]\n                  [:span \"Add Shortcut\"]]])\n              [:hr (use-style menu-separator-style)]\n              [button {:disabled true}\n               [:<> [:> mui-icons/Delete] [:span \"Delete Page\"]]]]])\n          (parse-renderer/parse-and-render title uid)]\n\n         ;; Children\n         [:div\n          (for [{:block/keys [uid] :as child} children]\n            ^{:key uid}\n            [block-el child])]\n\n         ;; References\n         (doall\n           (for [[linked-or-unlinked refs] ref-groups]\n             (when (not-empty refs)\n               [:section (use-style references-style {:key linked-or-unlinked})\n                [:h4 (use-style references-heading-style)\n                 [(r/adapt-react-class mui-icons/Link)]\n                 [:span linked-or-unlinked]\n                 [button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n                [:div (use-style references-list-style)\n                 (doall\n                   (for [[group-title group] refs]\n                     [:div (use-style references-group-style {:key (str \"group-\" group-title)})\n                      [:h4 (use-style references-group-title-style)\n                       [:a {:on-click #(navigate-uid uid)} group-title]] ;; FIXME: use correct uid\n                      (doall\n                        (for [{:block/keys [uid parents] :as block} group]\n                          [:div (use-style references-group-block-style {:key (str \"ref-\" uid)})\n                           ;; TODO: expand parent on click\n                           [block-el block]\n                           (when (> (count parents) 1)\n                             [breadcrumbs-list {:style reference-breadcrumbs-style}\n                              [(r/adapt-react-class mui-icons/LocationOn)]\n                              (doall\n                                (for [{:keys [node/title block/string block/uid]} parents]\n                                  [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)} (or title string)]))])]))]))]])))]))))\n\n\n(defn node-page-component\n  \"One diff between datascript and posh: we don't have pull in q for posh\n  https://github.com/mpdairy/posh/issues/21\"\n  [ident]\n  (let [{:keys [block/uid node/title] :as node} (db/get-node-document ident)\n        editing-uid @(subscribe [:editing/uid])\n        timeline-page? (is-timeline-page uid)]\n    (when-not (string/blank? title)\n      ;; TODO: let users toggle open/close references\n      (let [ref-groups [[\"Linked References\" (-> title patterns/linked get-data)]\n                        [\"Unlinked References\" (-> title patterns/unlinked get-data)]]]\n        [node-page-el node editing-uid ref-groups timeline-page?]))))\n"]}