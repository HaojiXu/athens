{"version":3,"sources":["athens/components/components_util.cljs"],"mappings":";;;;AAMA,AAAA,AAAMA,AACHC,AAAQC;AADX,AAEE,AAAAC,AAAC,AAAA,AAACC;AAAF,AAAA,AAAAD,AAAAA,AAAAA,AAAkBD,AAAAA;;AAFpB,AAAA,AAGWD;;AAGX;;;AAAA,AAAMI,AAEHJ,AAAQC;AAFX,AAGE,AAAMI,AAAW,AAACC,AAAOC,AAAgBC;AACnCC,AAAW,AAACC,AAAK,AAAKC;AAAL,AACE,AAAM,AAACC,AAAW,AAAA,AAAQD,AAAMX;AAAhC,AACE,AAAA,AAASW;;AADX;;AACmBN;AAH5C,AAAA,AAAA,AAAA,AAAA,AAIoB,AAAKQ;AAAL,AACE,AAAIA;;AACJ,AAAIA;AACtB,AAAA,AAAA,AAAIJ,AACDA,AAAkBT,AAAQC,AAC1BF,AAAkBC,AAAQC","names":["athens.components.components-util/default-component","content","uid","fexpr__56199","cljs.core/constantly","athens.components.components-util/render-component","components","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","athens.components.todo/components","athens.components.website-embeds/components","render","cljs.core/some","comp","cljs.core/re-matches","e"],"sourcesContent":["(ns athens.components.components-util\n  (:require\n    [athens.components.todo :as todo]\n    [athens.components.website-embeds :as website-embeds]))\n\n\n(defn default-component\n  [content uid]\n  ((constantly nil) uid)\n  [:button content])\n\n;; TODO: use metaprogramming to achieve dynamic rendering with both basic components and custom components\n(defn render-component\n  \"Renders a component using its parse tree & its uid.\"\n  [content uid]\n  (let [components (concat todo/components website-embeds/components)\n        render     (some (fn [comp]\n                           (when (re-matches (:match comp) content)\n                             (:render comp))) components)]\n    [:span {:on-click (fn [e]\n                        (.. e preventDefault)\n                        (.. e stopPropagation))}\n      (if render\n        [render            content uid]\n        [default-component content uid])]))\n"]}